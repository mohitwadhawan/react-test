import { useState, useEffect } from "react";

interface DomainListProps {
  onDomainsChange: (domains: string[]) => void; // Parent callback
}

export default function DomainList({ onDomainsChange }: DomainListProps) {
  const [domains, setDomains] = useState<string[]>([""]); // First domain always exists

  useEffect(() => {
    onDomainsChange(domains); // Notify parent on change
  }, [domains, onDomainsChange]);

  const addDomain = () => {
    if (domains.length < 10) {
      setDomains([...domains, ""]);
    }
  };

  const removeDomain = (index: number) => {
    if (domains.length > 1) {
      const newDomains = domains.filter((_, i) => i !== index);
      setDomains(newDomains);
    }
  };

  const validateDomain = (value: string): string => {
    if (!/^https?:\/\/|www\./.test(value)) {
      return "Domain must start with 'https://', 'http://', or 'www.'";
    }
    return "";
  };

  const handleChange = (index: number, value: string) => {
    const newDomains = [...domains];
    newDomains[index] = value;
    setDomains(newDomains);
  };

  return (
    <div className="p-4 space-y-4">
      {domains.map((domain, index) => (
        <div key={index} className="p-4 border rounded-md space-y-2">
          <div className="flex items-center gap-4">
            <input
              type="text"
              placeholder="Enter domain"
              value={domain}
              onChange={e => handleChange(index, e.target.value)}
              className={`flex-1 p-2 border rounded-md ${validateDomain(domain) ? "border-red-500" : "border-gray-300"}`}
            />
            {index > 0 && (
              <button
                onClick={() => removeDomain(index)}
                className="text-red-500 text-lg p-2 rounded hover:bg-red-100"
              >
                ‚ùå
              </button>
            )}
          </div>
          {validateDomain(domain) && <p className="text-red-500 text-sm">{validateDomain(domain)}</p>}
        </div>
      ))}

      <button
        onClick={addDomain}
        disabled={domains.length >= 10}
        className={`p-2 rounded-md text-white ${domains.length >= 10 ? "bg-gray-400 cursor-not-allowed" : "bg-blue-500 hover:bg-blue-600"}`}
      >
        Add More
      </button>
    </div>
  );
}
