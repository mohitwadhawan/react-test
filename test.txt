import { useState } from "react";

interface Domain {
  id: number;
  value: string;
  error: string;
}

export default function DomainList() {
  const [domains, setDomains] = useState<Domain[]>([]);

  const addDomain = () => {
    setDomains([...domains, { id: Date.now(), value: "", error: "" }]);
  };

  const removeDomain = (id: number) => {
    setDomains(domains.filter(domain => domain.id !== id));
  };

  const validateDomain = (value: string): string => {
    if (!/^https?:\/\/|www\./.test(value)) {
      return "Domain must start with 'https://', 'http://', or 'www.'";
    }
    return "";
  };

  const handleChange = (id: number, value: string) => {
    const error = validateDomain(value);
    setDomains(domains.map(domain => (domain.id === id ? { ...domain, value, error } : domain)));
  };

  return (
    <div className="p-4 space-y-4">
      {domains.map(domain => (
        <div key={domain.id} className="p-4 border rounded-md space-y-2">
          <div className="flex items-center gap-4">
            <input
              type="text"
              placeholder="Enter domain"
              value={domain.value}
              onChange={e => handleChange(domain.id, e.target.value)}
              className={`flex-1 p-2 border rounded-md ${domain.error ? "border-red-500" : "border-gray-300"}`}
            />
            <button
              onClick={() => removeDomain(domain.id)}
              className="text-red-500 text-lg p-2 rounded hover:bg-red-100"
            >
              ‚ùå
            </button>
          </div>
          {domain.error && <p className="text-red-500 text-sm">{domain.error}</p>}
        </div>
      ))}
      <button
        onClick={addDomain}
        className="p-2 bg-blue-500 text-white rounded-md hover:bg-blue-600"
      >
        Add More
      </button>
    </div>
  );
}
